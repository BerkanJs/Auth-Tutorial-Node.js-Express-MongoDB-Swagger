openapi: 3.0.0
info:
  title: Auth API
  version: 1.0.0
  description: Authentication and user management endpoints

servers:
  - url: http://localhost:5000/api/auth

paths:
  /signup:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - name
                - password
              properties:
                email:
                  type: string
                  example: test@example.com
                name:
                  type: string
                  example: Berkan
                password:
                  type: string
                  example: secret123
      responses:
        "201":
          description: User created successfully
        "400":
          description: User already exists or invalid input

  /login:
    post:
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: test@example.com
                password:
                  type: string
                  example: secret123
      responses:
        "200":
          description: Login successful
        "400":
          description: Invalid credentials

  /logout:
    post:
      summary: Logout a user
      responses:
        "200":
          description: Logged out successfully

  /verify-email:
    post:
      summary: Verify user's email with verification code
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - code
              properties:
                code:
                  type: string
                  example: 123456
      responses:
        "200":
          description: Email verified successfully
        "400":
          description: Invalid or expired verification code

  /forgot-password:
    post:
      summary: Request password reset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  example: test@example.com
      responses:
        "200":
          description: Reset link sent
        "400":
          description: User not found

  /reset-password/{token}:
    post:
      summary: Reset password with token
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
          description: The password reset token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - password
              properties:
                password:
                  type: string
                  example: newpassword123
      responses:
        "200":
          description: Password reset successful
        "400":
          description: Invalid or expired token

  /check-auth:
    get:
      summary: Check if the user is authenticated
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User authenticated
        "400":
          description: User not found or error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
